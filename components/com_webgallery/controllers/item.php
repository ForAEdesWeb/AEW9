<?php
/**
 * @package     Joomla.Site
 * @subpackage  com_webgallery
 *
 * @copyright   Copyright (C) 2012 Asikart. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 * @author      Generated by AKHelper - http://asikart.com
 */

// no direct access
defined('_JEXEC') or die;


include_once AKPATH_COMPONENT.'/controllerform.php' ;

/**
 * Item controllerform class to edit item.
 *
 * @package     Joomla.Site
 * @subpackage  com_webgallery 
 */
class WebgalleryControllerItem extends AKControllerForm
{
    /**
     * The URL view list variable.
     *
     * @var    string 
     */
    protected $view_list = 'items' ;
    
    /**
     * The URL view item variable.
     *
     * @var    string 
     */
    protected $view_item = 'item' ;
    
    /**
     * The Component name.
     *
     * @var    string 
     */
    protected $component = 'webgallery';
    
    /**
     * Constructor.
     *
     * @param   array  $config  An optional associative array of configuration settings.
     *
     * @see     JController
     * @since   11.1
     */
    
    function __construct() {
        
        $this->allow_url_params = array(
            'return'
        );
        
        $this->redirect_tasks = array(
            'save', 'cancel', 'publish', 'unpublish', 'delete'
        );
        
        parent::__construct();
    }
    
    /**
     * Function that allows child controller access to model data
     * after the data has been saved.
     *
     * @param   JModel  &$model     The data model object.
     * @param   array   $validData  The validated data.
     *
     * @return  void 
     *
     * @since   11.1
     */
    protected function postSaveHook( &$model, $validData = array())
    {
        $result = $model->postSaveHook($validData) ;
        return $result ;
    }
    
    /**
     * function fetchShots
     */
    public function fetchImages()
    {
        $input  = JFactory::getApplication()->input ;
        $params = JComponentHelper::getParams('com_webgallery') ;
        $token  = $input->getVar($params->get('cron_token', 'grazingcat'));
        
        // Check Cron Token
        if($token === null) jexit('Invalid Token');
        
        $db = JFactory::getDbo();
        
        // Get Lastest Queue
        $this->addModelPath(WEBGALLERY_ADMIN . '/models');
        $model = $this->getModel('Queues');
        
        $model->setState('list.limit', 1);
        $model->setState('list.ordering', 'a.id');
        $model->setState('list.direction', 'asc');
        $model->setState('filter', array('status' => '0'));
        
        $queues = $model->getItems();
        
        // Check is lastest queue exists
        $queue = JArrayHelper::getValue($queues, 0, false);

        if(!$queue) jexit();
        
        // Update status to 1
        $q = $db->getQuery(true) ;
        $q->update('#__webgallery_queues')
            ->set("status = 1")
            ->where("id = {$queue->a_id}")
            ;
        $db->setQuery($q);
        $db->execute();
        
        // Fetch Images
        $thumb = new WebgalleryThumb($queue->a_item_id);
        $thumb->fetchImages();
        
        // Update status to 2
        $q = $db->getQuery(true) ;
        $q->update('#__webgallery_queues')
            ->set("status = 2")
            ->where("id = {$queue->a_id}")
            ;
        $db->setQuery($q);
        $db->execute();
        
        jexit();
    }
}